#!/bin/bash

# Vérification du fix
fix=`bash /var/www/cgi-bin/gps/get_fix`
if [[ $fix -eq 1 ]]
then
    vitesse=`mysql -uroot -pbananapi -se "SELECT vitesse FROM bdc.Instantane;"`
	if [[ $vitesse -gt 15 ]]
	then
		# Réccupération des dernières données de géolocalisation
		previous_latitude=`mysql -uroot -pbananapi -se "SELECT latitude FROM bdc.kilometre ORDER BY Id DESC LIMIT 1;"`
		previous_longitude=`mysql -uroot -pbananapi -se "SELECT longitude FROM bdc.kilometre ORDER BY Id DESC LIMIT 1;"`
		
		# Réccupération des nouvelles données GPS
        new_latitude=`mysql -uroot -pbananapi -se "SELECT latitude FROM bdc.Instantane ORDER BY Id DESC LIMIT 1;"`
        new_longitude=`mysql -uroot -pbananapi -se "SELECT longitude FROM bdc.Instantane ORDER BY Id DESC LIMIT 1;"`
        altitude=`mysql -uroot -pbananapi -se "SELECT altitude FROM bdc.Instantane ORDER BY Id DESC LIMIT 1;"`
        
        nord=`mysql -uroot -pbananapi -se "SELECT track FROM bdc.Instantane ORDER BY Id DESC LIMIT 1;"`
        date=`mysql -uroot -pbananapi -se "SELECT time FROM bdc.Instantane ORDER BY Id DESC LIMIT 1;"`
        
		# Réccupération des données conducteur
		id_conducteur=`mysql -uroot -pbananapi -se "SELECT Conducteur_en_cours FROM bdc.Instantane;"`
		id_trajet=`mysql -uroot -pbananapi -se "SELECT Trajet_en_cours FROM bdc.Instantane;"`
		Pays=`mysql -uroot -pbananapi -se "SELECT Pays FROM bdc.Instantane;"`
        
        # Essence
        previous_kil_essence=10
        essence=0
        
        # Kilometres
		depart=1
		arrivee=0
		 
		
		# Réccupération des températures
		interieur=`cat /sys/bus/w1/devices/28-0414512fb7ff/w1_slave | grep t= | cut -d "=" -f2 | cut -c1-2`
		exterieur=cat /sys/bus/w1/devices/28-041450c2a6ff/w1_slave | grep t= | cut -d "=" -f2 | cut -c1-2`

		
		#Fonction PHP qui calcul la distance parcouru entre le point précedent et l'actuel
		distance=`/usr/bin/php -f /var/www/cgi-bin/gps/gps_php.php $previous_latitude $previous_longitude $new_latitude $new_longitude`
        #echo $distance
		# Calcul du kilometre cumulé.
		previous_kil=`mysql -uroot -pbananapi -se "SELECT kilometre_cumule FROM bdc.kilometre ORDER BY Id DESC LIMIT 1;"`
		#previous_kil=0
		previous_kil_essence=`mysql -uroot -pbananapi -se "SELECT kilometre_cumule_essence FROM bdc.kilometre ORDER BY Id DESC LIMIT 1;"`
		#echo $previous_kil
		#previous_kil=10
		#previous_kil_essence=10
		
		kilometre_cumule=`echo "$distance + $previous_kil" | bc -l`
		#echo $kilometre_cumule
		kilometre_cumule_essence=`echo "$distance + $previous_kil_essence" | bc -l`

		# Conversion des float en int pour comparaison futur
		
		intLon=${new_longitude%.*}
		#echo $intLon
		intLat=${new_latitude%.*}
		#echo $intLat

		#Ajoute en base la nouvelle entrée si lat et lon non egal à 0
		if [[ $intLat -ne 0 && $intLon -ne 0 ]]
			then
			mysql -uroot -pbananapi -e "INSERT INTO \`Voiture\`.\`kilometre\` (\`Date\`,\`longitude\`, \`latitude\`,\`altitude\`,\`vitesse\`,\`interieur\`,\`exterieur\`,\`kilometre_cumule\`,\`Nord\`,\`Depart\`,\`Arrivee\`,\`essence\`,\`kilometre_cumule_essence\`,\`id_trajet\`,\`id_conducteur\`) VALUES (\"$date\",\"$new_longitude\", \"$new_latitude\",\"$altitude\",\"$vitesse\",\"$interieur\",\"$exterieur\",\"$kilometre_cumule\",\"$nord\",\"$depart\",\"$arrivee\",\"$essence\",\"$kilometre_cumule_essence\",\"$id_trajet\",\"$id_conducteur\");"
			#echo "done!"
		fi
	fi
else
	echo "pas de fix"
fi
